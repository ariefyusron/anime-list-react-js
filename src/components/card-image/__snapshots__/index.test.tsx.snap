// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`CardImage Component > should render the CardImage component type TV 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-FEMpB jgTKpk"
        data-testid="component-card-image-container"
      >
        <img
          alt="image-anime"
          class="sc-gjcoXW jzMIwe"
          src="link.url"
        />
        <div
          class="sc-dVBluf gElMMC"
        >
          <h2
            class="sc-fLDLck dkpSwt"
          >
            Title
          </h2>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-FEMpB jgTKpk"
      data-testid="component-card-image-container"
    >
      <img
        alt="image-anime"
        class="sc-gjcoXW jzMIwe"
        src="link.url"
      />
      <div
        class="sc-dVBluf gElMMC"
      >
        <h2
          class="sc-fLDLck dkpSwt"
        >
          Title
        </h2>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CardImage Component > should render the CardImage component type TV 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-FEMpB jgTKpk"
        data-testid="component-card-image-container"
      >
        <img
          alt="image-anime"
          class="sc-gjcoXW jzMIwe"
          src="link.url"
        />
        <div
          class="sc-dVBluf gElMMC"
        >
          <h2
            class="sc-fLDLck dkpSwt"
            style="text-overflow: unset; -webkit-line-clamp: unset;"
          >
            Title
          </h2>
          <div
            class="sc-dycHyt gzJjCp"
          >
            <p
              class="sc-jbAkgO fAjAJG"
            >
              TV
            </p>
            <p
              class="sc-gNZgCX cDiVFB"
            >
              10 episodes
            </p>
          </div>
          <p
            class="sc-gNZgCX sc-kfeOyU cDiVFB cSA-DGX"
          >
            Action - Comedy
          </p>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-FEMpB jgTKpk"
      data-testid="component-card-image-container"
    >
      <img
        alt="image-anime"
        class="sc-gjcoXW jzMIwe"
        src="link.url"
      />
      <div
        class="sc-dVBluf gElMMC"
      >
        <h2
          class="sc-fLDLck dkpSwt"
          style="text-overflow: unset; -webkit-line-clamp: unset;"
        >
          Title
        </h2>
        <div
          class="sc-dycHyt gzJjCp"
        >
          <p
            class="sc-jbAkgO fAjAJG"
          >
            TV
          </p>
          <p
            class="sc-gNZgCX cDiVFB"
          >
            10 episodes
          </p>
        </div>
        <p
          class="sc-gNZgCX sc-kfeOyU cDiVFB cSA-DGX"
        >
          Action - Comedy
        </p>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
